// Copyright (c) 2023, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

import 'default_extension_map.dart';

/// Default extension for recognized MIME types.
///
/// Is the inverse of [defaultExtensionMap], and where that
/// map has multiple extensions which map to the same
/// MIME type, this map maps that MIME type to a *default*
/// extension.
///
/// Used by [extensionFromMime].
final Map<String, String> _defaultMimeTypeMap = {
  for (var entry in defaultExtensionMap.entries) entry.value: entry.key,
  // GENERATED by tool/generate_defaults.dart
  'application/epub+zip': 'epub',
  'application/lrc': 'lrc',
  'application/pgp-signature': 'pgp',
  'application/pkix-cert': 'cer',
  'application/rss+xml': 'rss',
  'application/sdp': 'sdp',
  'application/smil+xml': 'smil',
  'application/ttml+xml': 'ttml',
  'application/vnd.android.ota': 'ota',
  'application/vnd.apple.mpegurl': 'm3u8',
  'application/vnd.ms-pki.stl': 'stl',
  'application/vnd.ms-powerpoint': 'pot',
  'application/vnd.ms-wpl': 'wpl',
  'application/vnd.stardivision.impress': 'sdp',
  'application/vnd.stardivision.writer': 'vor',
  'application/vnd.youtube.yt': 'yt',
  'application/x-android-drm-fl': 'fl',
  'application/x-flac': 'flac',
  'application/x-font': 'pcf',
  'application/x-mobipocket-ebook': 'prc',
  'application/x-mpegurl': 'm3u',
  'application/x-pem-file': 'pem',
  'application/x-pkcs12': 'p12',
  'application/x-subrip': 'srt',
  'application/x-webarchive': 'webarchive',
  'application/x-webarchive-xml': 'webarchivexml',
  'application/x-wifi-config': 'xml',
  'application/x-x509-ca-cert': 'crt',
  'application/x-x509-server-cert': 'crt',
  'application/x-x509-user-cert': 'crt',
  'audio/3gpp': '3ga',
  'audio/aac': 'aac',
  'audio/aac-adts': 'aac',
  'audio/ac3': 'ac3',
  'audio/amr': 'amr',
  'audio/basic': 'snd',
  'audio/flac': 'flac',
  'audio/imelody': 'imy',
  'audio/midi': 'rtx',
  'audio/mobile-xmf': 'mxmf',
  'audio/mp4': 'm4a',
  'audio/mpeg': 'mp3',
  'audio/mpegurl': 'm3u',
  'audio/sp-midi': 'smf',
  'audio/x-matroska': 'mka',
  'audio/x-mpeg': 'mp3',
  'audio/x-mpegurl': 'm3u',
  'audio/x-pn-realaudio': 'ra',
  'image/avif': 'avif',
  'image/bmp': 'bmp',
  'image/gif': 'gif',
  'image/heic': 'heic',
  'image/heic-sequence': 'heics',
  'image/heif': 'heif',
  'image/heif-sequence': 'heifs',
  'image/ico': 'cur',
  'image/jpeg': 'jpg',
  'image/webp': 'webp',
  'image/x-adobe-dng': 'dng',
  'image/x-fuji-raf': 'raf',
  'image/x-icon': 'ico',
  'image/x-ms-bmp': 'bmp',
  'image/x-nikon-nrw': 'nrw',
  'image/x-panasonic-rw2': 'rw2',
  'image/x-pentax-pef': 'pef',
  'image/x-samsung-srw': 'srw',
  'image/x-sony-arw': 'arw',
  'text/comma-separated-values': 'csv',
  'text/plain': 'txt',
  'text/rtf': 'rtf',
  'text/text': 'phps',
  'text/x-c++hdr': 'hpp',
  'text/x-c++src': 'cpp',
  'text/x-vcard': 'vcf',
  'text/xml': 'xml',
  'video/3gpp': '3gpp',
  'video/3gpp2': '3gpp2',
  'video/avi': 'avi',
  'video/m4v': 'm4v',
  'video/mp2p': 'mpeg',
  'video/mp2t': 'm2ts',
  'video/mp2ts': 'ts',
  'video/mp4': 'm4v',
  'video/mpeg': 'mpeg',
  'video/quicktime': 'mov',
  'video/vnd.youtube.yt': 'yt',
  'video/x-matroska': 'mkv',
  'video/x-webex': 'wrf',
  // END GENERATED
};

/// The default file extension for a given MIME type.
///
/// If [mimeType] has multiple associated extensions,
/// the returned string is one of those, chosen as the default
/// extension for that MIME type.
///
/// Returns `null` if [mimeType] is not a recognized and
/// supported MIME type.
String? extensionFromMime(String mimeType) =>
    _defaultMimeTypeMap[mimeType.toLowerCase()];
