name: package:coverage
permissions: read-all

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/coverage.yaml'
      - 'pkgs/coverage/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/coverage.yaml'
      - 'pkgs/coverage/**'
  schedule:
    - cron: "0 0 * * 0"

jobs:
  # Check code formatting and static analysis on a single OS (linux)
  # against Dart dev.
  analyze:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pkgs/coverage/
    strategy:
      fail-fast: false
      matrix:
        sdk: [dev]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  # Run tests on a matrix consisting of two dimensions:
  # 1. OS: ubuntu-latest, macos-latest, windows-latest
  # 2. release channel: dev
  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: pkgs/coverage/
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [3.4, dev]
        exclude:
          # VM service times out on windows before Dart 3.5
          # https://github.com/dart-lang/coverage/issues/490
          - os: windows-latest
            sdk: 3.4
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run VM tests
        run: dart test --platform vm
        if: always() && steps.install.outcome == 'success'

  coverage:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pkgs/coverage/
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: dev
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Collect and report coverage
        run: dart run bin/test_with_coverage.dart --port=9292
      - name: Upload coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: pkgs/coverage/coverage/lcov.info
